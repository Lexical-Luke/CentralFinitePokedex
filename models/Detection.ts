/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Detection
 */
export interface Detection {
    /**
     * 
     * @type {number}
     * @memberof Detection
     */
    firstFrame?: number;
    /**
     * 
     * @type {number}
     * @memberof Detection
     */
    lastFrame?: number;
    /**
     * 
     * @type {number}
     * @memberof Detection
     */
    detectedFrames?: number;
    /**
     * 
     * @type {string}
     * @memberof Detection
     */
    type?: string;
    /**
     * 
     * @type {number}
     * @memberof Detection
     */
    averageFrameConfidence?: number;
    /**
     * 
     * @type {number}
     * @memberof Detection
     */
    prevalence?: number;
}

/**
 * Check if a given object implements the Detection interface.
 */
export function instanceOfDetection(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DetectionFromJSON(json: any): Detection {
    return DetectionFromJSONTyped(json, false);
}

export function DetectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Detection {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'firstFrame': !exists(json, 'first_frame') ? undefined : json['first_frame'],
        'lastFrame': !exists(json, 'last_frame') ? undefined : json['last_frame'],
        'detectedFrames': !exists(json, 'detected_frames') ? undefined : json['detected_frames'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'averageFrameConfidence': !exists(json, 'average_frame_confidence') ? undefined : json['average_frame_confidence'],
        'prevalence': !exists(json, 'prevalence') ? undefined : json['prevalence'],
    };
}

export function DetectionToJSON(value?: Detection | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'first_frame': value.firstFrame,
        'last_frame': value.lastFrame,
        'detected_frames': value.detectedFrames,
        'type': value.type,
        'average_frame_confidence': value.averageFrameConfidence,
        'prevalence': value.prevalence,
    };
}

