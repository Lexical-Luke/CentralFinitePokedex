/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FrameDetection } from './FrameDetection';
import {
    FrameDetectionFromJSON,
    FrameDetectionFromJSONTyped,
    FrameDetectionToJSON,
} from './FrameDetection';

/**
 * 
 * @export
 * @interface Frame
 */
export interface Frame {
    /**
     * 
     * @type {number}
     * @memberof Frame
     */
    sequence?: number;
    /**
     * 
     * @type {Array<FrameDetection>}
     * @memberof Frame
     */
    detections: Array<FrameDetection>;
}

/**
 * Check if a given object implements the Frame interface.
 */
export function instanceOfFrame(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "detections" in value;

    return isInstance;
}

export function FrameFromJSON(json: any): Frame {
    return FrameFromJSONTyped(json, false);
}

export function FrameFromJSONTyped(json: any, ignoreDiscriminator: boolean): Frame {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sequence': !exists(json, 'sequence') ? undefined : json['sequence'],
        'detections': ((json['detections'] as Array<any>).map(FrameDetectionFromJSON)),
    };
}

export function FrameToJSON(value?: Frame | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sequence': value.sequence,
        'detections': ((value.detections as Array<any>).map(FrameDetectionToJSON)),
    };
}

