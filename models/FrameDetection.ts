/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FrameDetection
 */
export interface FrameDetection {
    /**
     * 
     * @type {string}
     * @memberof FrameDetection
     */
    type?: string;
    /**
     * 
     * @type {number}
     * @memberof FrameDetection
     */
    value?: number;
    /**
     * 
     * @type {number}
     * @memberof FrameDetection
     */
    confidence?: number;
    /**
     * 
     * @type {string}
     * @memberof FrameDetection
     */
    topLeftXY?: string;
    /**
     * 
     * @type {string}
     * @memberof FrameDetection
     */
    bottomRightXY?: string;
}

/**
 * Check if a given object implements the FrameDetection interface.
 */
export function instanceOfFrameDetection(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FrameDetectionFromJSON(json: any): FrameDetection {
    return FrameDetectionFromJSONTyped(json, false);
}

export function FrameDetectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): FrameDetection {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'value': !exists(json, 'value') ? undefined : json['value'],
        'confidence': !exists(json, 'confidence') ? undefined : json['confidence'],
        'topLeftXY': !exists(json, 'top_left_x_y') ? undefined : json['top_left_x_y'],
        'bottomRightXY': !exists(json, 'bottom_right_x_y') ? undefined : json['bottom_right_x_y'],
    };
}

export function FrameDetectionToJSON(value?: FrameDetection | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'value': value.value,
        'confidence': value.confidence,
        'top_left_x_y': value.topLeftXY,
        'bottom_right_x_y': value.bottomRightXY,
    };
}

